         w __deregister_frame_info
         w __gnu_Unwind_Find_exidx
         w __register_frame_info
         w userAppExit
         w userAppInit
00000000 00000401 B __ctru_dev_path_buf
00000000 a shift
00000000 a shift
00000000 b _TLS_MODULE_BASE_
00000404 00000802 B __ctru_dev_utf16_buf
00100000 A __start__
00100000 T _start
00100008 T __service_ptr
0010000c T __apt_appid
00100010 T __heap_size
00100014 T __linear_heap_size
00100018 T __system_arglist
0010001c T __system_runflags
00100020 t startup
00100058 t ClearMem
0010006c t ClrLoop
00100094 T _init
001000ac T __aeabi_uidiv
001000ac 000001ec T __udivsi3
001000ac t .udivsi3_skip_div0_test
00100298 00000020 T __aeabi_uidivmod
001002b8 T __aeabi_idiv
001002b8 00000220 T __divsi3
001002c0 t .divsi3_skip_div0_test
001004d8 00000020 T __aeabi_idivmod
001004f8 00000004 W __aeabi_idiv0
001004f8 00000004 W __aeabi_ldiv0
001004fc T __aeabi_drsub
00100504 000002b0 T __aeabi_dsub
00100504 000002b0 T __subdf3
00100508 000002ac T __adddf3
00100508 000002ac T __aeabi_dadd
001007b4 00000024 T __aeabi_ui2d
001007b4 00000024 T __floatunsidf
001007d8 00000028 T __aeabi_i2d
001007d8 00000028 T __floatsidf
00100800 00000048 T __aeabi_f2d
00100800 00000048 T __extendsfdf2
00100848 00000074 T __aeabi_ul2d
00100848 00000074 T __floatundidf
0010085c 00000060 T __aeabi_l2d
0010085c 00000060 T __floatdidf
001008bc 0000019c T __aeabi_frsub
001008c4 00000194 T __aeabi_fsub
001008c4 00000194 T __subsf3
001008c8 00000190 T __addsf3
001008c8 00000190 T __aeabi_fadd
00100a58 00000028 T __aeabi_ui2f
00100a58 00000028 T __floatunsisf
00100a60 00000020 T __aeabi_i2f
00100a60 00000020 T __floatsisf
00100a80 0000008c T __aeabi_ul2f
00100a80 0000008c T __floatundisf
00100a90 0000007c T __aeabi_l2f
00100a90 0000007c T __floatdisf
00100b0c T __aeabi_ldivmod
00100be0 T __aeabi_uldivmod
00100c1c 00000014 T __restore_core_regs
00100c1c 00000014 T restore_core_regs
00100c30 T __gnu_Unwind_Restore_VFP
00100c38 T __gnu_Unwind_Save_VFP
00100c40 T __gnu_Unwind_Restore_VFP_D
00100c48 T __gnu_Unwind_Save_VFP_D
00100c50 T __gnu_Unwind_Restore_VFP_D_16_to_31
00100c58 T __gnu_Unwind_Save_VFP_D_16_to_31
00100c60 T __gnu_Unwind_Restore_WMMXD
00100ca4 T __gnu_Unwind_Save_WMMXD
00100ce8 T __gnu_Unwind_Restore_WMMXC
00100cfc T __gnu_Unwind_Save_WMMXC
00100d10 00000024 T ___Unwind_RaiseException
00100d10 00000024 T _Unwind_RaiseException
00100d34 00000024 T ___Unwind_Resume
00100d34 00000024 T _Unwind_Resume
00100d58 00000024 T ___Unwind_Resume_or_Rethrow
00100d58 00000024 T _Unwind_Resume_or_Rethrow
00100d7c 00000024 T ___Unwind_ForcedUnwind
00100d7c 00000024 T _Unwind_ForcedUnwind
00100da0 00000024 T ___Unwind_Backtrace
00100da0 00000024 T _Unwind_Backtrace
00100de8 00000390 T strcmp
00101170 t __do_global_dtors_aux
001011b0 t frame_dummy
001011dc 000003c8 T main
001015a4 00000180 t (anonymous namespace)::fontCodePointFromGlyphIndex(CFNT_s*, int)
00101724 000001a8 t (anonymous namespace)::setupRenderState(gfxScreen_t)
001018cc 0000008c T imgui::citro3d::exit()
00101958 00000f4c T imgui::citro3d::render(C3D_RenderTarget_tag*, C3D_RenderTarget_tag*)
001028a4 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
001028a4 00000028 W std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
001028cc 00000088 t __static_initialization_and_destruction_0(int, int)
00102954 000000b4 W std::vector<unsigned short, std::allocator<unsigned short> >::reserve(unsigned int)
00102a08 00000258 W std::vector<C3D_Tex, std::allocator<C3D_Tex> >::_M_default_append(unsigned int)
00102c60 00000144 W void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&)
00102da4 00000048 W unsigned short& std::vector<unsigned short, std::allocator<unsigned short> >::emplace_back<unsigned short&>(unsigned short&)
00102dec 00000144 W void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<int>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int&&)
00102f30 00000048 W unsigned short& std::vector<unsigned short, std::allocator<unsigned short> >::emplace_back<int>(int&&)
00102f78 00000040 W __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > > std::__adjacent_find<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)
00102fb8 00000050 W __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > > std::__unique<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_equal_to_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_equal_to_iter)
00103008 000000c0 W void std::__move_median_to_first<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter)
001030c8 00000050 W __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > > std::__unguarded_partition<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter)
00103118 0000002c W void std::__unguarded_linear_insert<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Val_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Val_less_iter)
00103144 00000004 W unsigned short* std::__niter_base<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >)
00103148 0000007c W std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >)
001031c4 00000098 W void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter)
0010325c 00000050 W void std::__final_insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter)
001032ac 00000050 W void std::__push_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, unsigned short, __gnu_cxx::__ops::_Iter_less_val>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, int, unsigned short, __gnu_cxx::__ops::_Iter_less_val&)
001032fc 000000b0 W void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, unsigned short, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, int, unsigned short, __gnu_cxx::__ops::_Iter_less_iter)
001033ac 00000060 W void std::__make_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter&)
0010340c 0000007c W void std::__heap_select<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter)
00103488 00000050 W void std::__sort_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_less_iter&)
001034d8 000000bc W void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, int, __gnu_cxx::__ops::_Iter_less_iter)
00103594 00000cd0 T imgui::citro3d::init()
00104264 00000018 t _GLOBAL__sub_I__ZN5imgui7citro3d4initEv
0010427c 00000018 t _GLOBAL__sub_D__ZN5imgui7citro3d4initEv
00104294 00000010 t (anonymous namespace)::getClipboardText(void*)
001042a4 0000005c t __static_initialization_and_destruction_0(int, int)
00104300 00000040 t (anonymous namespace)::setClipboardText(void*, char const*)
00104340 000000bc t (anonymous namespace)::updateTouch(ImGuiIO&)
001043fc 000001b8 t (anonymous namespace)::updateGamepads(ImGuiIO&)
001045b4 00000060 T imgui::ctru::init()
00104614 00000018 T imgui::ctru::steady_clock::now()
0010462c 000000a0 W void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
001046cc 0000017c t (anonymous namespace)::updateKeyboard(ImGuiIO&)
00104848 00000144 T imgui::ctru::newFrame()
0010498c 00000018 t _GLOBAL__sub_I__ZN5imgui4ctru4initEv
001049a4 00000018 t _GLOBAL__sub_D__ZN5imgui4ctru4initEv
001049bc 00000054 t LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>&, unsigned int)
00104a10 0000002c t IsWindowActiveAndVisible(ImGuiWindow*)
00104a3c 00000040 t StartLockWheelingWindow(ImGuiWindow*)
00104a7c 00000044 t ChildWindowComparer(void const*, void const*)
00104ac0 00000088 t SetWindowConditionAllowFlags(ImGuiWindow*, int, bool)
00104b48 00000130 t CalcWindowContentSizes(ImGuiWindow*, ImVec2*, ImVec2*)
00104c78 00000028 t GetWindowBgColorIdxFromFlags(int)
00104ca0 0000003c t CalcScrollEdgeSnap(float, float, float, float, float)
00104cdc 00000020 t ImGui::NavApplyItemToResult(ImGuiNavMoveResult*, ImGuiWindow*, unsigned int, ImRect const&)
00104cfc 00000034 t ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow*)
00104d30 00000020 t ImGui::NavRestoreLastChildNavWindow(ImGuiWindow*)
00104d50 00000030 t GetClipboardTextFn_DefaultImpl(void*)
00104d80 00000004 t ImeSetInputScreenPosFn_DefaultImpl(int, int)
00104d84 00000138 t __static_initialization_and_destruction_0(int, int)
00104ebc 00000044 t GetStyleVarInfo(int)
00104f00 0000034c t ImGui::ErrorCheckNewFrameSanityChecks()
0010524c 0000000c t MallocWrapper(unsigned int, void*)
00105258 0000000c t FreeWrapper(void*, void*)
00105264 000000bc t WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
00105320 0000005c t GetFallbackWindowNameForWindowingList(ImGuiWindow*)
0010537c 000000d0 t SetCurrentWindow(ImGuiWindow*)
0010544c 00000084 t ImGui::FindWindowFocusIndex(ImGuiWindow*)
001054d0 000001d8 t GetResizeBorderRect(ImGuiWindow*, int, float, float)
001056a8 000001d4 t ImGui::UpdateViewportsNewFrame()
0010587c 000003cc t FindHoveredWindow()
00105c48 000000e8 t ApplyWindowSettings(ImGuiWindow*, ImGuiWindowSettings*)
00105d30 0000021c t CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow*)
00105f4c 000002ec t CalcWindowSizeAfterConstraint(ImGuiWindow*, ImVec2)
00106238 00000188 t CalcResizePosSizeFromAnyCorner(ImGuiWindow*, ImVec2 const&, ImVec2 const&, ImVec2*, ImVec2*)
001063c0 000002b4 T ImGuiStyle::ImGuiStyle()
001063c0 000002b4 T ImGuiStyle::ImGuiStyle()
00106674 0000056c T ImGuiStyle::ScaleAllSizes(float)
00106be0 0000027c T ImGuiIO::ImGuiIO()
00106be0 0000027c T ImGuiIO::ImGuiIO()
00106e5c 00000018 T ImStrchrRange(char const*, char const*, char)
00106e74 00000024 T ImStreolRange(char const*, char const*)
00106e98 00000020 T ImStrSkipBlank(char const*)
00106eb8 00000050 T ImFormatString(char*, unsigned int, char const*, ...)
00106f08 00000030 T ImFormatStringV(char*, unsigned int, char const*, std::__va_list)
00106f38 0000003c T ImHashData(void const*, unsigned int, unsigned int)
00106f74 000000ec T ImHashStr(char const*, unsigned int, unsigned int)
00107060 0000000c T ImFileOpen(char const*, char const*)
0010706c 00000014 T ImFileClose(__sFILE*)
00107080 00000098 T ImFileGetSize(__sFILE*)
00107118 0000001c T ImFileRead(void*, unsigned long long, unsigned long long, __sFILE*)
00107134 0000001c T ImFileWrite(void const*, unsigned long long, unsigned long long, __sFILE*)
00107150 000001b8 T ImTextCharFromUtf8(unsigned int*, char const*, char const*)
00107308 00000110 T ImGui::ColorConvertFloat4ToU32(ImVec4 const&)
00107418 00000048 T ImGuiStorage::GetVoidPtr(unsigned int) const
00107460 00000048 T ImGui::GetStyle()
001074a8 0000005c T ImGui::GetColorU32(int, float)
00107504 00000460 t ImGui::RenderWindowOuterBorders(ImGuiWindow*)
00107964 00000024 T ImGui::GetStyleColorVec4(int)
00107988 000000b8 T ImGui::PopStyleColor(int)
00107a40 000000f8 T ImGui::PopStyleVar(int)
00107b38 0000003c T ImGui::FindRenderedTextEnd(char const*, char const*)
00107b74 00000170 T ImGui::RenderFrame(ImVec2, ImVec2, unsigned int, bool, float)
00107ce4 00000304 T ImGui::RenderNavHighlight(ImRect const&, unsigned int, int)
00107fe8 0000006c T ImGuiWindow::GetIDNoKeepAlive(char const*, char const*)
00108054 0000010c T ImGui::SetActiveID(unsigned int, ImGuiWindow*)
00108160 00000014 T ImGui::ClearActiveID()
00108174 00000050 T ImGui::SetHoveredID(unsigned int)
001081c4 00000044 T ImGui::KeepAliveID(unsigned int)
00108208 00000078 T ImGuiWindow::GetID(char const*, char const*)
00108280 0000006c T ImGuiWindow::GetID(int)
001082ec 00000080 T ImGui::MarkItemEdited(unsigned int)
0010836c 000000f4 T ImGui::IsClippedEx(ImRect const&, unsigned int, bool)
00108460 00000018 T ImGui::SetLastItemData(ImGuiWindow*, unsigned int, int, ImRect const&)
00108478 0000007c T ImGui::CalcWrapWidthForPos(ImVec2 const&, float)
001084f4 00000040 T ImGui::MemAlloc(unsigned int)
00108534 00000028 T ImStrdup(char const*)
0010855c 000001b8 t GetViewportDrawList(ImGuiViewportP*, unsigned int, char const*)
00108714 00000838 W ImGuiContext::ImGuiContext(ImFontAtlas*)
00108714 00000838 W ImGuiContext::ImGuiContext(ImFontAtlas*)
00108f4c 00000048 T ImGui::MemFree(void*)
00108f94 0000006c T ImStrdupcpy(char*, unsigned int*, char const*)
00109000 00000128 T ImFileLoadToMemory(char const*, char const*, unsigned int*, int)
00109128 00000068 T ImGui::GcCompactTransientMiscBuffers()
00109190 0000018c t AddDrawListToDrawData(ImVector<ImDrawList*>*, ImDrawList*)
0010931c 000000ec t AddWindowToDrawData(ImGuiWindow*, int)
00109408 00000018 t AddRootWindowToDrawData(ImGuiWindow*)
00109420 00000134 T ImGui::PushStyleColor(int, ImVec4 const&)
00109554 00000148 T ImGui::PushStyleVar(int, ImVec2 const&)
0010969c 000000b4 T ImGui::GcCompactTransientWindowBuffers(ImGuiWindow*)
00109750 0000009c t WindowSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
001097ec 000000c8 T ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow*)
001098b4 000000ec T ImGuiIO::AddInputCharactersUTF8(char const*)
001099a0 0000012c t SetClipboardTextFn_DefaultImpl(void*, char const*)
00109acc 000009d0 t ImGui::RenderWindowDecorations(ImGuiWindow*, ImRect const&, bool, int, unsigned int const*, float)
0010a49c 00000180 T ImGuiTextBuffer::append(char const*, char const*)
0010a61c 0000015c T ImGuiTextBuffer::appendfv(char const*, std::__va_list)
0010a778 0000002c T ImGuiTextBuffer::appendf(char const*, ...)
0010a7a4 00000140 t AddWindowToSortBuffer(ImVector<ImGuiWindow*>*, ImGuiWindow*)
0010a8e4 00000464 T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0010a8e4 00000464 T ImGuiWindow::ImGuiWindow(ImGuiContext*, char const*)
0010ad48 00000150 T ImGuiStorage::SetVoidPtr(unsigned int, void*)
0010ae98 0000002c T ImGui::SetClipboardText(char const*)
0010aec4 00000010 T ImGui::GetCurrentContext()
0010aed4 00000010 T ImGui::SetCurrentContext(ImGuiContext*)
0010aee4 00000090 T ImGui::CallContextHooks(ImGuiContext*, ImGuiContextHookType)
0010af74 00000044 T ImGui::GetIO()
0010afb8 000000c0 t SetupViewportDrawData(ImGuiViewportP*, ImVector<ImDrawList*>*)
0010b078 0000006c T ImGui::GetDrawData()
0010b0e4 00000018 T ImGui::GetBackgroundDrawList(ImGuiViewport*)
0010b0fc 00000018 T ImGui::GetForegroundDrawList(ImGuiViewport*)
0010b114 00000058 T ImGui::GetForegroundDrawList()
0010b16c 00000050 T ImGui::GetMergedKeyModFlags()
0010b1bc 000000c4 t ImGui::ErrorCheckEndFrameSanityChecks()
0010b280 000002f8 T ImGui::Initialize(ImGuiContext*)
0010b578 00000050 T ImGui::CreateContext(ImFontAtlas*)
0010b5c8 000001bc T ImDrawDataBuilder::FlattenIntoSingleLayer()
0010b784 000000c4 T ImGui::PushClipRect(ImVec2 const&, ImVec2 const&, bool)
0010b848 000000ac T ImGui::PopClipRect()
0010b8f4 000000c8 T ImGui::CalcTextSize(char const*, char const*, bool, float)
0010b9bc 0000022c T ImGui::RenderTextClippedEx(ImDrawList*, ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
0010bbe8 000001f4 T ImGui::IsMouseHoveringRect(ImVec2 const&, ImVec2 const&, bool)
0010bddc 000001ec T ImGui::ItemHoverable(ImRect const&, unsigned int)
0010bfc8 00000058 T ImGui::IsKeyDown(int)
0010c020 000000b4 T ImGui::CalcTypematicRepeatAmount(float, float, float, float)
0010c0d4 00000074 T ImGui::GetKeyPressedAmount(int, float, float)
0010c148 000000b0 T ImGui::IsKeyPressed(int, bool)
0010c1f8 000001b0 t ImGui::UpdateTabFocus()
0010c3a8 00000048 T ImGui::IsMouseDown(int)
0010c3f0 000000bc T ImGui::IsMouseClicked(int, bool)
0010c4ac 00000074 T ImGui::IsMouseDragPastThreshold(int, float)
0010c520 0000005c T ImGui::IsMouseDragging(int, float)
0010c57c 000000a0 T ImGui::IsMousePosValid(ImVec2 const*)
0010c61c 000004ac t ImGui::UpdateMouseInputs()
0010cac8 00000018 T ImGui::SetMouseCursor(int)
0010cae0 00000040 T ImGui::IsItemActive()
0010cb20 00000044 T ImGui::IsItemFocused()
0010cb64 000001a4 T ImGui::IsItemHovered(int)
0010cd08 00000050 T ImGui::SetItemAllowOverlap()
0010cd58 00000024 T ImGui::FindWindowByID(unsigned int)
0010cd7c 000000ec t WindowSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
0010ce68 00000018 T ImGui::FindWindowByName(char const*)
0010ce80 00000098 T ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow*, int, ImGuiWindow*)
0010cf18 0000013c T ImGui::BringWindowToFocusFront(ImGuiWindow*)
0010d054 00000148 T ImGui::BringWindowToDisplayFront(ImGuiWindow*)
0010d19c 0000011c T ImGui::SetCurrentFont(ImFont*)
0010d2b8 0000003c T ImGui::IsWindowChildOf(ImGuiWindow*, ImGuiWindow*)
0010d2f4 00000098 T ImGui::IsWindowAbove(ImGuiWindow*, ImGuiWindow*)
0010d38c 00000040 T ImGui::IsWindowNavFocusable(ImGuiWindow*)
0010d3cc 000000bc t FindWindowNavFocusable(int, int, int)
0010d488 000000c4 t NavUpdateWindowingHighlightWindow(int)
0010d54c 0000017c T ImGui::SetWindowPos(ImGuiWindow*, ImVec2 const&, int)
0010d6c8 000000d8 T ImGui::SetWindowSize(ImGuiWindow*, ImVec2 const&, int)
0010d7a0 00000028 T ImGui::SetWindowCollapsed(ImGuiWindow*, bool, int)
0010d7c8 00000084 T ImGui::SetNextWindowPos(ImVec2 const&, int, ImVec2 const&)
0010d84c 00000078 T ImGui::SetNextWindowSize(ImVec2 const&, int)
0010d8c4 00000068 T ImGui::SetNextWindowSizeConstraints(ImVec2 const&, ImVec2 const&, void (*)(ImGuiSizeCallbackData*), void*)
0010d92c 00000028 T ImGui::SetNextWindowBgAlpha(float)
0010d954 000000c4 T ImGui::PushID(char const*)
0010da18 00000080 T ImGui::PopID()
0010da98 00000144 T ImGui::DebugCheckVersionAndDataLayout(char const*, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int)
0010dbdc 00000050 T ImGuiStackSizes::SetToCurrentState()
0010dc2c 0000016c T ImGuiStackSizes::CompareWithCurrentState()
0010dd98 000000cc T ImGui::SameLine(float, float)
0010de64 00000138 T ImGui::ItemSize(ImVec2 const&, float)
0010df9c 0000009c T ImGui::PopItemWidth()
0010e038 00000018 T ImGui::GetTextLineHeight()
0010e050 00000070 T ImGui::GetContentRegionMaxAbs()
0010e0c0 00000118 T ImGui::CalcItemSize(ImVec2, float, float)
0010e1d8 00000014 T ImGui::SetScrollX(ImGuiWindow*, float)
0010e1ec 00000014 T ImGui::SetScrollY(ImGuiWindow*, float)
0010e200 000003e4 t ImGui::NavUpdatePageUpPageDown()
0010e5e4 0000060c t ImGui::UpdateMouseWheel()
0010ebf0 0000006c T ImGui::SetScrollFromPosX(ImGuiWindow*, float, float)
0010ec5c 0000011c T ImGui::SetScrollFromPosY(ImGuiWindow*, float, float)
0010ed78 00000368 T ImGui::ScrollToBringRectIntoView(ImGuiWindow*, ImRect const&)
0010f0e0 00000174 T ImGui::IsPopupOpen(unsigned int, int)
0010f254 00000060 T ImGui::GetTopMostPopupModal()
0010f2b4 00000270 T ImGui::UpdateHoveredWindowAndCaptureFlags()
0010f524 00000190 T ImGui::ClosePopupToLevel(int, bool)
0010f6b4 0000015c T ImGui::ClosePopupsOverWindow(ImGuiWindow*, bool)
0010f810 0000014c T ImGui::FocusWindow(ImGuiWindow*)
0010f95c 000000a8 T ImGui::StartMouseMovingWindow(ImGuiWindow*)
0010fa04 000000d0 T ImGui::FocusTopMostWindowUnderOne(ImGuiWindow*, ImGuiWindow*)
0010fad4 00000274 T ImGui::UpdateMouseMovingWindowEndFrame()
0010fd48 00000198 T ImGui::CloseCurrentPopup()
0010fee0 00000588 T ImGui::FindBestWindowPosForPopupEx(ImVec2 const&, ImVec2 const&, int*, ImRect const&, ImRect const&, ImGuiPopupPositionPolicy)
00110468 00000080 T ImGui::SetNavID(unsigned int, int, unsigned int)
001104e8 0000004c T ImGui::SetNavIDWithRectRel(unsigned int, int, unsigned int, ImRect const&)
00110534 0000008c t ImGui::NavUpdateInitResult()
001105c0 000002f0 t ImGui::NavUpdateMoveResult()
001108b0 00000164 T ImGui::SetFocusID(unsigned int, ImGuiWindow*)
00110a14 0000004c T ImGetDirQuadrantFromDelta(float, float)
00110a60 00000650 t ImGui::NavScoreItem(ImGuiNavMoveResult*, ImRect)
001110b0 000003b4 t ImGui::NavProcessItem(ImGuiWindow*, ImRect const&, unsigned int)
00111464 00000120 T ImGui::ItemAdd(ImRect const&, unsigned int, ImRect const*)
00111584 00000050 T ImGui::NavMoveRequestButNoResultYet()
001115d4 00000060 T ImGui::NavMoveRequestCancel()
00111634 0000008c T ImGui::NavMoveRequestForward(int, int, ImRect const&, int)
001116c0 00000138 T ImGui::NavInitWindow(ImGuiWindow*, bool)
001117f8 00000074 t NavRestoreLayer(ImGuiNavLayer)
0011186c 00000174 T ImGui::GetNavInputAmount(int, ImGuiInputReadMode)
001119e0 000001fc T ImGui::GetNavInputAmount2d(int, ImGuiInputReadMode, float, float)
00111bdc 000000b8 T ImGui::ClearDragDrop()
00111c94 00000140 T ImGui::LogText(char const*, ...)
00111dd4 000001dc T ImGui::LogRenderedText(ImVec2 const*, char const*, char const*)
00111fb0 000000d4 T ImGui::RenderText(ImVec2, char const*, char const*, bool)
00112084 000000c8 T ImGui::RenderTextWrapped(ImVec2, char const*, char const*, float)
0011214c 0000009c T ImGui::RenderTextClipped(ImVec2 const&, ImVec2 const&, char const*, char const*, ImVec2 const*, ImVec2 const&, ImRect const*)
001121e8 00000530 t ImGui::RenderWindowTitleBarContents(ImGuiWindow*, ImRect const&, char const*, bool*)
00112718 0000001c T ImGui::LogSetNextTextDecoration(char const*, char const*)
00112734 00000144 T ImGui::LogFinish()
00112878 000001ac T ImGui::End()
00112a24 00000050 T ImGui::EndTooltip()
00112a74 00000038 T ImGui::MarkIniSettingsDirty(ImGuiWindow*)
00112aac 00000c60 t ImGui::UpdateWindowManualResize(ImGuiWindow*, ImVec2 const&, int*, int, unsigned int*, ImRect const&)
0011370c 00000168 T ImGui::UpdateMouseMovingWindowNewFrame()
00113874 00000764 t ImGui::NavUpdateWindowing()
00113fd8 00000130 T ImGui::CreateNewWindowSettings(char const*)
00114108 000000d0 T ImGui::FindWindowSettings(unsigned int)
001141d8 0000035c t WindowSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
00114534 0000002c T ImGui::FindOrCreateWindowSettings(char const*)
00114560 0000005c t WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
001145bc 0000009c T ImGui::FindSettingsHandler(char const*)
00114658 00000348 T ImGui::LoadIniSettingsFromMemory(char const*, unsigned int)
001149a0 00000044 T ImGui::LoadIniSettingsFromDisk(char const*)
001149e4 000001d4 T ImGui::SaveIniSettingsToMemory(unsigned int*)
00114bb8 00000088 T ImGui::SaveIniSettingsToDisk(char const*)
00114c40 000000d0 t ImGui::UpdateSettings()
00114d10 00000054 T ImGui::GetMainViewport()
00114d64 00000238 t ImGui::NavCalcPreferredRefPos()
00114f9c 000012ec t ImGui::NavUpdate()
00116288 00000454 t CalcWindowAutoFitSize(ImGuiWindow*, ImVec2 const&)
001166dc 00000130 T ImGui::GetWindowAllowedExtentRect(ImGuiWindow*)
0011680c 00000340 T ImGui::FindBestWindowPosForPopup(ImGuiWindow*)
00116b4c 00000498 t CreateNewWindow(char const*, int)
00116fe4 00002bf8 T ImGui::Begin(char const*, bool*, int)
00119bdc 00000168 T ImGui::BeginTooltipEx(int, int)
00119d44 00000014 T ImGui::BeginTooltip()
00119d58 000000e0 t ImGui::UpdateDebugToolItemPicker()
00119e38 0000002c T ImGui::SetTooltipV(char const*, std::__va_list)
00119e64 0000002c T ImGui::SetTooltip(char const*, ...)
00119e90 00000e08 T ImGui::NewFrame()
0011ac98 00000270 t ImGui::NavUpdateWindowingOverlay()
0011af08 00000294 t ImGui::NavEndFrame()
0011b19c 000004bc T ImGui::EndFrame()
0011b658 000003c4 T ImGui::Render()
0011ba1c 0000009c W void IM_DELETE<ImDrawList>(ImDrawList*)
0011bab8 00000014 W void IM_DELETE<char>(char*)
0011bacc 000001c4 T ImGuiWindow::~ImGuiWindow()
0011bacc 000001c4 T ImGuiWindow::~ImGuiWindow()
0011bc90 00000518 W ImGuiContext::~ImGuiContext()
0011bc90 00000518 W ImGuiContext::~ImGuiContext()
0011c1a8 00000020 W void IM_DELETE<ImGuiContext>(ImGuiContext*)
0011c1c8 00000020 W void IM_DELETE<ImFontAtlas>(ImFontAtlas*)
0011c1e8 00000020 W void IM_DELETE<ImGuiWindow>(ImGuiWindow*)
0011c208 00000064 W void IM_DELETE<ImGuiViewportP>(ImGuiViewportP*)
0011c26c 00000788 T ImGui::Shutdown(ImGuiContext*)
0011c9f4 0000004c T ImGui::DestroyContext(ImGuiContext*)
0011ca40 00000018 t _GLOBAL__sub_I_GImGui
0011ca58 000001c8 t __static_initialization_and_destruction_0(int, int)
0011cc20 00000944 T ImGui::StyleColorsDark(ImGuiStyle*)
0011d564 000000d8 T ImDrawListSharedData::ImDrawListSharedData()
0011d564 000000d8 T ImDrawListSharedData::ImDrawListSharedData()
0011d63c 0000009c T ImDrawListSharedData::SetCircleSegmentMaxError(float)
0011d6d8 0000042c T ImDrawList::_ResetForNewFrame()
0011db04 00000184 T ImDrawList::AddDrawCmd()
0011dc88 00000074 T ImDrawList::_PopUnusedDrawCmd()
0011dcfc 000000f8 T ImDrawList::_OnChangedClipRect()
0011ddf4 000000f0 T ImDrawList::_OnChangedTextureID()
0011dee4 00000074 T ImDrawList::_OnChangedVtxOffset()
0011df58 00000180 T ImDrawList::PushClipRect(ImVec2, ImVec2, bool)
0011e0d8 00000078 T ImDrawList::PopClipRect()
0011e150 000000b0 T ImDrawList::PushTextureID(void*)
0011e200 00000060 T ImDrawList::PopTextureID()
0011e260 00000188 T ImDrawList::PrimReserve(int, int)
0011e3e8 00000154 T ImDrawList::PrimRect(ImVec2 const&, ImVec2 const&, unsigned int)
0011e53c 00000170 T ImDrawList::PrimRectUV(ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
0011e6ac 000010b8 T ImDrawList::AddPolyline(ImVec2 const*, int, unsigned int, bool, float)
0011f764 000003dc T ImDrawList::AddConvexPolyFilled(ImVec2 const*, int, unsigned int)
0011fb40 00000258 T ImDrawList::PathArcToFast(ImVec2 const&, float, int, int)
0011fd98 00000264 T ImDrawList::PathArcTo(ImVec2 const&, float, float, float, int)
0011fffc 00000478 T ImDrawList::PathRect(ImVec2 const&, ImVec2 const&, float, int)
00120474 00000220 T ImDrawList::AddLine(ImVec2 const&, ImVec2 const&, unsigned int, float)
00120694 00000198 T ImDrawList::AddRect(ImVec2 const&, ImVec2 const&, unsigned int, float, int, float)
0012082c 00000074 T ImDrawList::AddRectFilled(ImVec2 const&, ImVec2 const&, unsigned int, float, int)
001208a0 0000021c T ImDrawList::AddTriangleFilled(ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00120abc 00000130 T ImDrawList::AddCircleFilled(ImVec2 const&, float, unsigned int, int)
00120bec 0000007c T ImDrawList::AddImage(void*, ImVec2 const&, ImVec2 const&, ImVec2 const&, ImVec2 const&, unsigned int)
00120c68 00000184 T ImDrawListSplitter::ClearFreeMemory()
00120dec 000000ec T ImDrawList::_ClearFreeMemory()
00120ed8 00000180 T ImDrawListSplitter::SetCurrentChannel(ImDrawList*, int)
00121058 000005e4 T ImDrawListSplitter::Merge(ImDrawList*)
0012163c 00000060 T ImFontConfig::ImFontConfig()
0012163c 00000060 T ImFontConfig::ImFontConfig()
0012169c 000000a0 T ImFontAtlas::ImFontAtlas()
0012169c 000000a0 T ImFontAtlas::ImFontAtlas()
0012173c 000001f4 T ImFontAtlas::ClearInputData()
00121930 00000068 T ImFontAtlas::ClearTexData()
00121998 000002cc T ImFontAtlas::GetMouseCursorTexData(int, ImVec2*, ImVec2*, ImVec2*, ImVec2*)
00121c64 00000074 T ImFont::ImFont()
00121c64 00000074 T ImFont::ImFont()
00121cd8 000000a0 T ImFont::ClearOutputData()
00121d78 00000044 T ImFont::~ImFont()
00121d78 00000044 T ImFont::~ImFont()
00121dbc 00000190 T ImFont::GrowIndex(int)
00121f4c 00000280 T ImFont::AddGlyph(ImFontConfig const*, unsigned short, float, float, float, float, float, float, float, float, float)
001221cc 00000048 T ImFont::FindGlyph(unsigned short) const
00122214 0000002c T ImFont::SetGlyphVisible(unsigned short, bool)
00122240 00000048 T ImFont::FindGlyphNoFallback(unsigned short) const
00122288 00000454 T ImFont::BuildLookupTable()
001226dc 000001c0 T ImFont::CalcWordWrapPositionA(float, char const*, char const*, float) const
0012289c 00000228 T ImFont::CalcTextSizeA(float, float, float, char const*, char const*, char const**) const
00122ac4 0000057c T ImFont::RenderText(ImDrawList*, float, ImVec2, unsigned int, ImVec4 const&, char const*, char const*, float, bool) const
00123040 00000170 T ImDrawList::AddText(ImFont const*, float, ImVec2 const&, unsigned int, char const*, char const*, float, ImVec4 const*)
001231b0 00000340 T ImGui::RenderArrow(ImDrawList*, ImVec2, unsigned int, int, float)
001234f0 000004a4 T ImGui::RenderMouseCursor(ImDrawList*, ImVec2, float, int, unsigned int, unsigned int, unsigned int)
00123994 00000020 W void IM_DELETE<ImFont>(ImFont*)
001239b4 000000bc T ImFontAtlas::ClearFonts()
00123a70 00000020 T ImFontAtlas::Clear()
00123a90 00000074 T ImFontAtlas::~ImFontAtlas()
00123a90 00000074 T ImFontAtlas::~ImFontAtlas()
00123b04 00000018 t _GLOBAL__sub_I__ZN5ImGui15StyleColorsDarkEP10ImGuiStyle
00123b1c 00000010 t TableSettingsCalcChunkSize(int)
00123b2c 0000008c t TableSettingsInit(ImGuiTableSettings*, unsigned int, int, int)
00123bb8 000002b8 t TableSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void*, char const*)
00123e70 00000080 t TableSettingsHandler_ApplyAll(ImGuiContext*, ImGuiSettingsHandler*)
00123ef0 000000a4 t TableSettingsHandler_ClearAll(ImGuiContext*, ImGuiSettingsHandler*)
00123f94 0000031c t TableSettingsHandler_WriteAll(ImGuiContext*, ImGuiSettingsHandler*, ImGuiTextBuffer*)
001242b0 000000e4 T ImGui::TableSettingsCreate(unsigned int, int)
00124394 000000d0 T ImGui::TableSettingsFindByID(unsigned int)
00124464 00000094 t TableSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, char const*)
001244f8 00000158 T ImGui::TableSettingsInstallHandler(ImGuiContext*)
00124650 000001c0 T ImGui::TableGcCompactTransientBuffers(ImGuiTable*)
00124810 000002e8 T ImGui::TableGcCompactSettings()
00124af8 00000088 T ImGui::SetWindowClipRectBeforeSetChannel(ImGuiWindow*, ImRect const&)
00124b80 0000004c T ImGui::TablePushBackgroundChannel()
00124bcc 00000088 T ImGui::TablePopBackgroundChannel()
00124c54 00000014 T ImGui::GetColumnOffsetFromNorm(ImGuiOldColumns const*, float)
00124c68 00000128 t GetColumnWidthEx(ImGuiOldColumns*, int, bool)
00124d90 00000014 T ImGui::GetColumnNormFromOffset(ImGuiOldColumns const*, float)
00124da4 000000d0 T ImGui::GetColumnOffset(int)
00124e74 000000f8 t GetDraggedColumnOffset(ImGuiOldColumns*, int)
00124f6c 0000019c T ImGui::SetColumnOffset(int, float)
00125108 00000058 T ImGui::PushColumnsBackground()
00125160 0000004c T ImGui::PopColumnsBackground()
001251ac 000003b0 T ImGui::EndColumns()
0012555c 000004d0 T ImGui::TextEx(char const*, char const*, int)
00125a2c 00000064 T ImGui::TextV(char const*, std::__va_list)
00125a90 0000002c T ImGui::Text(char const*, ...)
00125abc 0000007c T ImGui::TextColoredV(ImVec4 const&, char const*, std::__va_list)
00125b38 0000002c T ImGui::TextColored(ImVec4 const&, char const*, ...)
00125b64 00000720 T ImGui::ButtonBehavior(ImRect const&, unsigned int, bool*, bool*, int)
00126284 000002ec T ImGui::ButtonEx(char const*, ImVec2 const&, int)
00126570 00000010 T ImGui::Button(char const*, ImVec2 const&)
00126580 00000360 T ImGui::CloseButton(unsigned int, ImVec2 const&)
001268e0 000002c0 T ImGui::CollapseButton(unsigned int, ImVec2 const&)
00126ba0 0000002c T ImGui::GetWindowScrollbarID(ImGuiWindow*, ImGuiAxis)
00126bcc 00000174 T ImGui::GetWindowScrollbarRect(ImGuiWindow*, ImGuiAxis)
00126d40 000005d8 T ImGui::ScrollbarEx(ImRect const&, unsigned int, ImGuiAxis, float*, float, float, int)
00127318 000001a0 T ImGui::Scrollbar(ImGuiAxis)
001274b8 000004d4 T ImGui::Selectable(char const*, bool, int, ImVec2 const&)
0012798c 000000d0 T ImGuiMenuColumns::Update(int, float, bool)
00127a5c 00000004 W C3Di_LightEnvUpdate
00127a60 00000004 W C3Di_LightEnvDirty
00127a64 00000004 W C3Di_ProcTexUpdate
00127a68 00000004 W C3Di_ProcTexDirty
00127a6c 000000b4 t C3Di_AptEventHook
00127b20 00000004 W C3Di_GasUpdate
00127b24 000001e0 T C3D_Init
00127d04 00000098 T C3D_SetViewport
00127d9c 0000004c T C3D_SetScissor
00127de8 000004ec T C3Di_UpdateContext
001282d4 000000e0 T C3Di_SplitFrame
001283b4 00000044 T C3D_Fini
001283f8 00000108 T C3D_BindProgram
00128500 0000004c t onVBlank0
0012854c 0000004c t onVBlank1
00128598 00000080 t C3Di_RenderTargetDestroy
00128618 000000f4 t onQueueFinish
0012870c 00000038 T C3Di_RenderQueueEnableVBlank
00128744 00000030 T C3Di_RenderQueueDisableVBlank
00128774 00000060 T C3Di_RenderQueueInit
001287d4 000000b0 T C3Di_RenderQueueExit
00128884 00000034 T C3Di_RenderQueueWaitDone
001288b8 000000e4 T C3D_FrameBegin
0012899c 00000048 T C3D_FrameDrawOn
001289e4 000001d8 T C3D_FrameEnd
00128bbc 00000128 T C3D_RenderTargetCreate
00128ce4 000000f0 T C3D_RenderTargetDelete
00128dd4 000000a8 T C3D_RenderTargetSetOutput
00128e7c 000000fc T C3D_SyncTextureCopy
00128f78 000002a0 T C3D_TexInitWithParams
00129218 000000c8 T C3D_TexLoadImage
001292e0 00000044 T C3D_TexBind
00129324 00000074 T C3D_TexDelete
00129398 0000016c T C3Di_SetTex
00129504 000003f4 t Tex3DSi_ImportCommon
001298f8 00000038 T Tex3DS_TextureImportStdio
00129930 00000004 T Tex3DS_TextureFree
00129934 0000001c T C3D_CalcColorBufSize
00129950 0000001c T C3D_CalcDepthBufSize
0012996c 00000044 T C3D_SetFrameBuf
001299b0 0000016c T C3Di_FrameBufBind
00129b1c 000000cc T C3D_FrameBufClear
00129be8 00000044 T C3D_FrameBufTransfer
00129c2c 00000034 T C3D_GetTexEnv
00129c60 00000024 T C3Di_TexEnvBind
00129c84 00000218 T C3D_DrawElements
00129e9c 00000024 T BufInfo_Init
00129ec0 00000080 T BufInfo_Add
00129f40 00000020 T C3D_GetBufInfo
00129f60 00000048 T C3Di_BufInfoBind
00129fa8 00000040 T C3D_DepthMap
00129fe8 0000001c T C3D_CullFace
0012a004 00000040 T C3D_StencilTest
0012a044 00000024 T C3D_StencilOp
0012a068 0000001c T C3D_BlendingColor
0012a084 00000024 T C3D_EarlyDepthTest
0012a0a8 0000002c T C3D_DepthTest
0012a0d4 0000002c T C3D_AlphaTest
0012a100 00000050 T C3D_AlphaBlend
0012a150 00000030 T C3D_FragOpMode
0012a180 00000044 T C3D_FragOpShadow
0012a1c4 000001ac T C3Di_EffectBind
0012a370 00000028 T AttrInfo_Init
0012a398 00000098 T AttrInfo_AddLoader
0012a430 00000020 T C3D_GetAttrInfo
0012a450 00000080 T C3Di_AttrInfoBind
0012a4d0 000000a8 T C3D_ImmSendAttrib
0012a578 0000029c T C3D_UpdateUniforms
0012a814 000000c0 T C3Di_DirtyUniforms
0012a8d4 000000d8 T C3Di_LoadShaderUniforms
0012a9ac 00000028 T C3Di_ClearShaderUniforms
0012a9d4 000000cc T Mtx_OrthoTilt
0012aaa0 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012aac4 00000004 t addrMapNodeDestructor(rbtree_node*)
0012aac8 00000114 T vramMemAlign
0012abdc 00000008 T vramAlloc
0012abe4 0000005c T vramFree
0012ac40 00000024 t addrMapNodeComparator(rbtree_node const*, rbtree_node const*)
0012ac64 00000004 t addrMapNodeDestructor(rbtree_node*)
0012ac68 00000120 T linearMemAlign
0012ad88 00000008 T linearAlloc
0012ad90 0000005c T linearFree
0012adec 00000084 T MemPool::CoalesceRight(MemBlock*)
0012ae70 00000170 T MemPool::Allocate(MemChunk&, unsigned long, int)
0012afe0 000000fc T MemPool::Deallocate(MemChunk const&)
0012b0dc 00000008 t romfs_close
0012b0e4 000000c8 t romfs_seek
0012b1ac 00000024 t romfs_dirreset
0012b1d0 000000c8 t fill_dir
0012b298 000002b0 t romfs_dirnext
0012b548 00000084 t romfs_free
0012b5cc 000000d4 t searchForFile.constprop.0
0012b6a0 000000d8 t searchForDir.constprop.0
0012b778 000001c0 t navigateToDir.constprop.0
0012b938 00000128 t romfs_open
0012ba60 0000004c t romfs_chdir
0012baac 00000070 t romfs_diropen
0012bb1c 0000017c t romfs_stat
0012bc98 00000008 t romfs_dirclose
0012bca0 0000007c t romfs_fstat
0012bd1c 000000d4 t romfs_read
0012bdf0 00000290 T romfsMountFromFile
0012c080 00000098 T romfsMountFromCurrentProcess
0012c118 0000025c T romfsMountSelf
0012c374 00000074 T osConvertVirtToPhys
0012c3e8 00000054 T osGetTimeRef
0012c43c 000000e4 T osGetTime
0012c520 00000074 T __libctru_gtod
0012c594 00000034 T __ctru_speedup_config
0012c5c8 00000038 T osSetSpeedupEnable
0012c600 0000009c T fontEnsureMapped
0012c69c 000000fc T fontGlyphIndexFromCodePoint
0012c798 0000006c T fontGetCharWidthInfo
0012c804 000001c0 T fontCalcGlyphPos
0012c9c4 000000d0 t gfxPresentFramebuffer
0012ca94 00000010 T gfxSet3D
0012caa4 000000ec T gfxSetScreenFormat
0012cb90 00000108 T gfxInit
0012cc98 00000010 T gfxInitDefault
0012cca8 000000b4 T gfxExit
0012cd5c 000000a0 T gfxGetFramebuffer
0012cdfc 00000030 T gfxScreenSwapBuffers
0012ce2c 000001e0 T shaderInstanceInit
0012d00c 00000018 T shaderInstanceGetUniformLocation
0012d024 0000001c T shaderProgramInit
0012d040 00000064 T shaderProgramFree
0012d0a4 00000080 T shaderProgramSetVsh
0012d124 000008c0 T shaderProgramConfigure
0012d9e4 000001f8 t DVLE_GenerateOutmap.part.0
0012dbdc 000001cc T DVLB_ParseFile
0012dda8 00000038 T DVLB_Free
0012dde0 00000074 T DVLE_GetUniformRegister
0012de54 00000010 T GX_BindQueue
0012de64 00000078 T GX_ProcessCommandList
0012dedc 00000074 T GX_MemoryFill
0012df50 00000070 T GX_DisplayTransfer
0012dfc0 00000074 T GX_TextureCopy
0012e034 00000068 t gxCmdQueueDoCommands.part.0
0012e09c 000000c8 T gxCmdQueueInterrupt
0012e164 0000004c T gxCmdQueueClear
0012e1b0 000000f8 T gxCmdQueueAdd
0012e2a8 00000080 T gxCmdQueueRun
0012e328 00000060 T gxCmdQueueStop
0012e388 00000074 T gxCmdQueueWait
0012e3fc 0000013c T GPUCMD_Add
0012e538 000000ac T GPUCMD_Split
0012e5e4 00000040 T f32tof16
0012e624 00000040 T f32tof24
0012e664 00000044 T f32tof31
0012e6a8 00000c58 t gspHardwareInit
0012f300 00000254 T gspInit
0012f554 000000f0 T gspExit
0012f644 00000010 T gspHasGpuRight
0012f654 00000098 T gspPresentBuffer
0012f6ec 00000030 T gspSetEventCallback
0012f71c 00000050 T gspWaitForEvent
0012f76c 0000004c T gspWaitForAnyEvent
0012f7b8 00000160 t gspEventThreadMain
0012f918 00000130 T gspSubmitGxCommand
0012fa48 00000050 T GSPGPU_FlushDataCache
0012fa98 00000034 T GSPGPU_SetLcdForceBlack
0012facc 00000068 T GSPGPU_AcquireRight
0012fb34 00000048 T GSPGPU_ReleaseRight
0012fb7c 0000007c T GSPGPU_ImportDisplayCaptureInfo
0012fbf8 0000002c T GSPGPU_SaveVramSysArea
0012fc24 0000002c T GSPGPU_RestoreVramSysArea
0012fc50 0000003c T acExit
0012fc8c 000001b0 t aptConvertScreenForCapture
0012fe3c 00000008 W aptDspSleep
0012fe44 00000004 W aptDspWakeup
0012fe48 00000004 W aptDspCancel
0012fe4c 0000015c T aptSendCommand
0012ffa8 00000038 t aptExitProcess
0012ffe0 000002f0 T aptExit
001302d0 000000d8 T aptHandleSleep
001303a8 00000030 T aptHook
001303d8 00000030 T aptUnhook
00130408 0000001c T aptSetMessageCallback
00130424 00000084 T APT_SleepIfShellClosed
001304a8 00000084 T aptSetSleepAllowed
0013052c 00000084 T APT_UnlockTransition
001305b0 00000484 t aptEventHandler
00130a34 000000b0 T APT_ReceiveParameter
00130ae4 000000b0 t aptReceiveParameter.constprop.0
00130b98 000002bc t aptScreenTransfer
00130e54 000002d0 t aptWaitForWakeUp.isra.0
00131124 00000118 T aptLaunchLibraryApplet
0013123c 000000f8 T aptJumpToHomeMenu
00131334 0000004c T aptMainLoop
00131380 00000234 T aptInit
001315b4 0000005c T APT_SendParameter
00131610 0000007c T APT_CheckNew3DS
0013168c 00000048 T APT_GetSharedFont
001316d4 00000024 W hidShouldUseIrrst
001316f8 0000018c T hidInit
00131884 000000e8 T hidExit
0013196c 00000294 T hidScanInput
00131c00 00000010 T hidKeysHeld
00131c10 00000010 T hidKeysDown
00131c20 00000010 T hidKeysUp
00131c30 00000018 T hidTouchRead
00131c48 00000018 T hidCircleRead
00131c60 00000074 T ptmSysmInit
00131cd4 0000003c T ptmSysmExit
00131d10 00000034 T PTMSYSM_ConfigureNew3DSCPU
00131d44 000000c8 T fsInit
00131e0c 0000003c T fsExit
00131e48 00000060 T fsExemptFromSession
00131ea8 00000050 T fsUnexemptFromSession
00131ef8 000000cc T FSUSER_OpenFile
00131fc4 000000d4 T FSUSER_OpenFileDirectly
00132098 000000bc T FSUSER_DeleteFile
00132154 000000f8 T FSUSER_RenameFile
0013224c 000000bc T FSUSER_DeleteDirectory
00132308 000000d4 T FSUSER_CreateFile
001323dc 000000c4 T FSUSER_CreateDirectory
001324a0 000000f8 T FSUSER_RenameDirectory
00132598 000000b4 T FSUSER_OpenDirectory
0013264c 00000094 T FSUSER_OpenArchive
001326e0 0000008c T FSUSER_CloseArchive
0013276c 00000074 T FSUSER_GetSdmcArchiveResource
001327e0 00000064 T FSUSER_IsSdmcWritable
00132844 00000058 T FSFILE_Read
0013289c 00000060 T FSFILE_Write
001328fc 00000038 T FSFILE_GetSize
00132934 00000028 T FSFILE_SetSize
0013295c 0000003c T FSFILE_Close
00132998 00000024 T FSFILE_Flush
001329bc 00000050 T FSDIR_Read
00132a0c 0000003c T FSDIR_Close
00132a48 00000178 t swkbdMessageCallback
00132bc0 00000078 T swkbdInit
00132c38 0000006c T swkbdSetButton
00132ca4 00000008 T swkbdSetInitialText
00132cac 000003ac T swkbdInputText
00133058 000000cc t buffer_read
00133124 000000d0 t iov_read
001331f4 00000128 t iov_memmove
0013331c 000001d8 t decompress_rle
001334f4 00000258 t decompress_lzss
0013374c 000002ec t decompress_huff.part.0
00133a38 00000440 t decompress_lz11
00133e78 00000010 T decompressCallback_Stdio
00133e88 000000e4 T decompressHeader
00133f6c 00000250 T decompressV
001341bc 00000010 T rbtree_init
001341cc 000001a0 t do_insert
0013436c 00000008 T rbtree_insert
00134374 00000090 T rbtree_rotate
00134404 00000338 T rbtree_remove
0013473c 00000074 T rbtree_find
001347b0 000000e8 T utf16_to_utf8
00134898 00000064 T decode_utf16
001348fc 000000c0 T utf8_to_utf16
001349c0 000001e0 W __system_allocateHeaps
00134ba0 00000038 W __libctru_init
00134bd8 000000f0 W __system_initArgv
00134cc8 T svcControlMemory
00134ce8 T svcQueryMemory
00134d18 T svcExitProcess
00134d20 T svcCreateThread
00134d40 T svcExitThread
00134d48 T svcSleepThread
00134d50 T svcReleaseMutex
00134d58 T svcCreateEvent
00134d6c T svcSignalEvent
00134d74 T svcClearEvent
00134d7c T svcCreateMemoryBlock
00134d94 T svcMapMemoryBlock
00134d9c T svcUnmapMemoryBlock
00134da4 T svcCreateAddressArbiter
00134db8 T svcArbitrateAddressNoTimeout
00134dc0 T svcCloseHandle
00134dc8 T svcWaitSynchronization
00134dd0 T svcWaitSynchronizationN
00134df8 T svcDuplicateHandle
00134e0c T svcGetSystemTick
00134e14 T svcConnectToPort
00134e28 T svcSendSyncRequest
00134e30 T svcGetResourceLimit
00134e44 T svcGetResourceLimitLimitValues
00134e4c T svcGetResourceLimitCurrentValues
00134e54 T svcBreak
00134e5c W initSystem
00134eac W __ctru_exit
00134ec4 T __aeabi_read_tp
00134ed0 0000000c T __sync_init
00134edc 00000018 T __sync_fini
00134ef4 0000002c T syncArbitrateAddress
00134f20 0000001c T LightLock_Init
00134f3c 00000094 T LightLock_Lock
00134fd0 00000044 T LightLock_TryLock
00135014 00000040 T LightLock_Unlock
00135054 00000024 T RecursiveLock_Init
00135078 00000030 T RecursiveLock_Lock
001350a8 00000078 T RecursiveLock_TryLock
00135120 00000054 T RecursiveLock_Unlock
00135174 00000040 T LightEvent_Init
001351b4 000000a4 T LightEvent_Clear
00135258 000000c8 T LightEvent_Signal
00135320 00000058 T LightEvent_TryWait
00135378 000000b0 T LightEvent_Wait
00135428 00000084 W envGetHandle
001354ac 00000050 W envDestroyHandles
001354fc 00000124 T srvInit
00135620 00000058 T srvExit
00135678 00000080 T srvGetServiceHandleDirect
001356f8 00000048 T srvGetServiceHandle
00135740 00000038 T srvPublishToSubscriber
00135778 00000188 T threadCreate
00135900 0000002c T threadFree
0013592c 00000024 T threadJoin
00135950 00000030 T threadGetCurrent
00135980 00000040 T threadExit
001359c0 00000044 t _thread_begin
00135a04 00000094 t mappableFindAddressWithin
00135a98 00000028 T mappableInit
00135ac0 00000080 T mappableAlloc
00135b40 00000004 T mappableFree
00135b44 00000160 T irrstInit
00135ca4 000000cc T irrstExit
00135d70 000000b0 T irrstScanInput
00135e20 00000024 T irrstKeysHeld
00135e44 0000000c T srvPmGetSessionHandle
00135e50 00000050 T rbtree_node_next
00135ea0 00000060 T encode_utf16
00135f00 000000fc T encode_utf8
00135ffc 0000013c T decode_utf8
00136138 00000030 W __appInit
00136168 00000030 t __libctru_nanosleep
00136198 00000030 t __libctru_get_reent
001361c8 000000f8 T __system_initSyscalls
001362c0 00000030 W __appExit
001362f0 00000090 W __libctru_exit
00136380 00000014 t archive_link
00136394 00000014 t archive_dirreset
001363a8 00000014 t archive_chmod
001363bc 00000024 t error_cmp
001363e0 00000050 t archive_translate_error
00136430 000000d4 t archive_seek
00136504 0000007c t _archiveInit.part.0
00136580 0000008c t archiveFindDevice.part.0
0013660c 00000294 t archive_utf16path
001368a0 000000a0 t _archiveUnmountDeviceStruct.part.0
00136940 00000014 t archive_fchmod
00136954 00000014 t archive_statvfs
00136968 00000158 t _archiveMountDevice
00136ac0 000000e8 t archive_diropen
00136ba8 000000a4 t archive_fstat
00136c4c 0000006c t archive_close
00136cb8 0000006c t archive_fsync
00136d24 00000070 t archive_dirclose
00136d94 000000e8 t sdmc_statvfs
00136e7c 00000080 t archive_ftruncate
00136efc 000000fc t archive_chdir
00136ff8 000000b0 t archive_read
001370a8 000000ac t archive_unlink
00137154 000000c8 t archive_rmdir
0013721c 000000ec t archive_mkdir
00137308 000001a8 t archive_stat
001374b0 00000184 t archive_rename
00137634 00000168 t archive_dirnext
0013779c 0000012c t archive_write
001378c8 000001f0 t archive_open
00137ab8 000001a4 T archiveMountSdmc
00137c5c 00000054 T archiveUnmountAll
00137cb0 00000004 T operator delete(void*, unsigned int)
00137cb4 00000060 T __cxa_guard_acquire
00137d14 0000000c T __cxa_guard_release
00137d20 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00137d20 00000020 T __gnu_cxx::recursive_init_error::~recursive_init_error()
00137d40 0000002c T __gnu_cxx::recursive_init_error::~recursive_init_error()
00137d6c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
00137d6c 00000010 T __gnu_cxx::recursive_init_error::recursive_init_error()
00137d7c 0000005c T operator new(unsigned int)
00137dd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00137dd8 00000020 T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00137df8 0000002c T __cxxabiv1::__si_class_type_info::~__si_class_type_info()
00137e24 0000006c T __cxxabiv1::__si_class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00137e90 000000dc T __cxxabiv1::__si_class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00137f6c 00000044 T __cxxabiv1::__si_class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00137fb0 00000004 T std::type_info::~type_info()
00137fb0 00000004 T std::type_info::~type_info()
00137fb4 00000008 T std::type_info::__is_pointer_p() const
00137fb4 00000008 T std::type_info::__is_function_p() const
00137fbc 0000004c T std::type_info::operator==(std::type_info const&) const
00138008 0000002c T std::__throw_bad_alloc()
00138034 00000048 T std::__throw_logic_error(char const*)
0013807c 00000048 T std::__throw_length_error(char const*)
001380c4 00000058 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned int&, unsigned int)
0013811c 00000014 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
00138130 00000108 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_mutate(unsigned int, unsigned int, char const*, unsigned int)
00138238 00000290 W std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace(unsigned int, unsigned int, char const*, unsigned int)
001384c8 0000000c T std::bad_alloc::what() const
001384d4 00000020 T std::bad_alloc::~bad_alloc()
001384d4 00000020 T std::bad_alloc::~bad_alloc()
001384f4 0000002c T std::bad_alloc::~bad_alloc()
00138520 0000005c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const
0013857c 00000014 T __cxxabiv1::__class_type_info::__do_find_public_src(int, void const*, __cxxabiv1::__class_type_info const*, void const*) const
00138590 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
00138590 00000020 T __cxxabiv1::__class_type_info::~__class_type_info()
001385b0 0000002c T __cxxabiv1::__class_type_info::~__class_type_info()
001385dc 00000068 T __cxxabiv1::__class_type_info::__do_dyncast(int, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&) const
00138644 0000002c T __cxxabiv1::__class_type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__upcast_result&) const
00138670 00000044 T __cxxabiv1::__class_type_info::__do_catch(std::type_info const*, void**, unsigned int) const
001386b4 00000004 T operator delete(void*)
001386b8 000000d0 t (anonymous namespace)::pool::free(void*) [clone .constprop.0]
00138788 0000009c t (anonymous namespace)::pool::allocate(unsigned int) [clone .constprop.0]
00138824 00000044 T __cxa_allocate_exception
00138868 00000030 T __cxa_free_exception
00138898 00000040 t _GLOBAL__sub_I__ZN9__gnu_cxx9__freeresEv
001388d8 T __cxa_end_cleanup
001388e8 00000138 T __cxa_type_match
00138a20 000000b4 T __cxa_begin_cleanup
00138ad4 000000b4 T __gnu_end_cleanup
00138b88 000000cc T __cxa_begin_catch
00138c54 000000e0 T __cxa_end_catch
00138d34 00000004 T std::exception::~exception()
00138d34 00000004 T std::exception::~exception()
00138d38 00000004 T std::bad_exception::~bad_exception()
00138d38 00000004 T std::bad_exception::~bad_exception()
00138d3c 0000000c T transaction clone for std::exception::what() const
00138d3c 0000000c T std::exception::what() const
00138d48 0000000c T transaction clone for std::bad_exception::what() const
00138d48 0000000c T std::bad_exception::what() const
00138d54 00000018 T std::bad_exception::~bad_exception()
00138d6c 0000000c T __cxa_get_globals_fast
00138d78 0000000c T __cxa_get_globals
00138d84 00000168 t read_encoded_value_with_base(unsigned char, unsigned int, unsigned char const*, unsigned int*)
00138eec 00000064 t base_of_encoded_value(unsigned char, _Unwind_Context*)
00138f50 000000d8 t parse_lsda_header(_Unwind_Context*, unsigned char const*, lsda_header_info*)
00139028 000006f8 T __gxx_personality_v0
00139720 00000038 T __cxxabiv1::__terminate(void (*)())
00139758 00000018 T std::terminate()
00139770 0000000c T __cxxabiv1::__unexpected(void (*)())
0013977c 00000018 T std::unexpected()
00139794 00000014 T std::get_terminate()
001397a8 00000014 T std::get_unexpected()
001397bc 00000070 t __gxx_exception_cleanup(_Unwind_Reason_Code, _Unwind_Control_Block*)
0013982c 00000070 T __cxa_init_primary_exception
0013989c 00000058 T __cxa_throw
001398f4 000000b0 T __cxa_rethrow
001399a4 00000014 T std::get_new_handler()
001399b8 00000008 T std::logic_error::what() const
001399b8 00000008 T std::runtime_error::what() const
001399c0 00000064 T std::logic_error::~logic_error()
001399c0 00000064 T std::logic_error::~logic_error()
00139a24 00000064 T std::length_error::~length_error()
00139a24 00000064 T std::length_error::~length_error()
00139a88 0000006c T std::logic_error::~logic_error()
00139af4 0000006c T std::length_error::~length_error()
00139b60 00000038 T std::logic_error::logic_error(char const*)
00139b60 00000038 T std::logic_error::logic_error(char const*)
00139b98 00000044 T std::length_error::length_error(char const*)
00139b98 00000044 T std::length_error::length_error(char const*)
00139bdc 00000088 W std::string::_Rep::_S_create(unsigned int, unsigned int, std::allocator<char> const&)
00139c64 00000004 W std::string::_Rep::_M_destroy(std::allocator<char> const&)
00139c68 000000a4 W char* std::string::_S_construct<char const*>(char const*, char const*, std::allocator<char> const&, std::forward_iterator_tag)
00139d0c 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00139d0c 0000004c W std::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
00139d58 00000070 t __cxxabiv1::__is_gxx_exception_class(char*)
00139dc8 0000002c T __cxa_call_terminate
00139df4 00000154 T __cxa_call_unexpected
00139f48 0000022c T cosf
0013a174 00000024 t with_errnof
0013a198 0000001c T __math_invalidf
0013a1b4 0000006c T modff
0013a220 00000274 T sinf
0013a494 0000008c T acosf
0013a520 00000070 T sqrtf
0013a590 00000254 T __ieee754_acosf
0013a7e4 00000008 T __ieee754_sqrtf
0013a7ec 00000010 T fabsf
0013a7fc 0000000c T nanf
0013a808 00000038 T __aeabi_d2lz
0013a808 00000038 T __fixdfdi
0013a840 00000040 T __aeabi_d2ulz
0013a840 00000040 T __fixunsdfdi
0013a880 00000120 T __udivmoddi4
0013a9a0 00000018 t selfrel_offset31
0013a9b8 00000090 t search_EIT_table
0013aa48 00000040 t __gnu_unwind_get_pr_addr
0013aa88 00000118 t get_eit_entry
0013aba0 00000088 t restore_non_core_regs
0013ac28 00000014 t _Unwind_decode_typeinfo_ptr.constprop.0
0013ac3c 00000004 t _Unwind_DebugHook
0013ac40 00000064 t unwind_phase2
0013aca4 00000134 t unwind_phase2_forced
0013add8 000000a4 T __gnu_Unwind_RaiseException
0013ae7c 00000028 T __gnu_Unwind_ForcedUnwind
0013aea4 00000074 T __gnu_Unwind_Resume
0013af18 00000020 T __gnu_Unwind_Resume_or_Rethrow
0013af38 00000004 T _Unwind_Complete
0013af3c 00000018 T _Unwind_DeleteException
0013af54 0000005c T _Unwind_VRS_Get
0013afb0 0000002c t _Unwind_GetGR
0013afdc 0000005c T _Unwind_VRS_Set
0013b038 0000002c t _Unwind_SetGR
0013b064 000000c0 T __gnu_Unwind_Backtrace
0013b124 00000420 t __gnu_unwind_pr_common
0013b544 00000008 T __aeabi_unwind_cpp_pr0
0013b54c 00000008 W __aeabi_unwind_cpp_pr1
0013b554 00000008 W __aeabi_unwind_cpp_pr2
0013b55c 000003d8 T _Unwind_VRS_Pop
0013b934 00000064 t next_unwind_byte
0013b998 0000002c t _Unwind_GetGR.constprop.0
0013b9c4 00000004 t unwind_UCB_from_context
0013b9c8 00000424 T __gnu_unwind_execute
0013bdec 00000048 T __gnu_unwind_frame
0013be34 00000010 T _Unwind_GetRegionStart
0013be44 0000001c T _Unwind_GetLanguageSpecificData
0013be60 00000008 T _Unwind_GetDataRelBase
0013be68 00000008 T _Unwind_GetTextRelBase
0013be70 00000014 T abort
0013be84 0000005c T __assert_func
0013bee0 00000078 T bsearch
0013bf58 00000028 T calloc
0013bf80 00000094 T _calloc_r
0013c014 0000000c T __errno
0013c020 00000034 T exit
0013c054 00000160 T _fclose_r
0013c1b4 00000020 T fclose
0013c1d4 00000258 T __sflush_r
0013c42c 00000094 T _fflush_r
0013c4c0 00000038 T fflush
0013c4f8 0000000c T _cleanup_r
0013c504 00000184 T __sinit
0013c688 00000134 T __sfp
0013c7bc 0000000c T __sfp_lock_acquire
0013c7c8 0000000c T __sfp_lock_release
0013c7d4 0000003c T __libc_fini_array
0013c810 0000003c T fiprintf
0013c84c 00000140 T _fopen_r
0013c98c 00000028 T fopen
0013c9b4 000002d0 T _fread_r
0013cc84 00000038 T fread
0013ccbc 000000f8 T _malloc_trim_r
0013cdb4 000002e4 T _free_r
0013d098 0000001c T _fseek_r
0013d0b4 00000034 T fseek
0013d0e8 000004f8 T _fseeko_r
0013d5e0 00000034 T ftell
0013d614 000001bc T _ftello_r
0013d7d0 00000068 T _fwalk
0013d838 00000070 T _fwalk_reent
0013d8a8 000000f8 T _fwrite_r
0013d9a0 00000038 T fwrite
0013d9d8 0000007c T __libc_init_array
0013da54 00000138 T __smakebuf_r
0013db8c 00000028 T memalign
0013dbb4 00000148 T _memalign_r
0013dcfc 00000020 T malloc
0013dd1c 00000020 T free
0013dd3c 000007f0 T _malloc_r
0013e52c 000000e0 T memchr
0013e60c 000000a8 T memcmp
0013e6b4 0000011c T memcpy
0013e7d0 00000154 T memmove
0013e924 00000118 T memset
0013ea3c 0000000c T __malloc_lock
0013ea48 0000000c T __malloc_unlock
0013ea54 00000958 T qsort
0013f3ac 0000001c t lflush
0013f3c8 000001ac T __srefill_r
0013f574 00000098 T _raise_r
0013f60c 00000020 T raise
0013f62c 00000074 T sscanf
0013f6a0 00000044 T __sread
0013f6e4 00000008 T __seofread
0013f6ec 00000068 T __swrite
0013f754 00000048 T __sseek
0013f79c 00000008 T __sclose
0013f7a4 00000144 T strchr
0013f8e8 0000005c T strlen
0013f944 000000ec T strncat
0013fa30 000000dc T strncmp
0013fb0c 000000c0 T strncpy
0013fbcc 00000048 T strnlen
0013fc14 00000428 t two_way_long_needle
0014003c 00000248 T strstr
00140288 0000130c T _strtod_l
00141594 0000000c T _strtod_r
001415a0 000001c8 t _strtoul_l.constprop.0
00141768 00000004 T _strtoul_r
0014176c 00000050 t get_arg
001417bc 00002b68 T __ssvfscanf_r
00144324 0000003c T time
00144360 0000064c t get_arg
001449ac 00000034 T __sprint_r
001449e0 00002584 T _vfiprintf_r
00146f64 000000d4 t __sbprintf
00147038 000000a4 T _vsnprintf_r
001470dc 00000038 T vsnprintf
00147114 00000054 T _wcrtomb_r
00147168 00000028 T _wcsrtombs_r
00147190 00000154 T __swsetup_r
001472e4 00000114 T __call_exitprocs
001473f8 000000c8 T __sflags
001474c0 000004a4 T __sfvwrite_r
00147964 000000ec t rshift
00147a50 00000928 T __gethex
00148378 0000004c T __match
001483c4 0000029c T __hexnan
00148660 00000008 T iswspace
00148668 0000000c T _localeconv_r
00148674 00000010 T __locale_mb_cur_max
00148684 00000068 T _mbrtowc_r
001486ec 000002fc T __utf8_mbtowc
001489e8 00000088 T _Balloc
00148a70 0000001c T _Bfree
00148a8c 000000f4 T __multadd
00148b80 00000110 T __s2b
00148c90 00000058 T __hi0bits
00148ce8 0000009c T __lo0bits
00148d84 000000a4 T __i2b
00148e28 00000204 T __multiply
0014902c 00000120 T __pow5mult
0014914c 0000013c T __lshift
00149288 00000058 T __mcmp
001492e0 000001cc T __mdiff
001494ac 00000088 T __ulp
00149534 000000d4 T __b2d
00149608 0000012c T __d2b
00149734 00000078 T __ratio
001497ac 00000088 T __copybits
00149834 0000005c T __any_on
00149890 00000028 T realloc
001498b8 00000598 T _realloc_r
00149e50 000000e4 T __sccl
00149f38 00000010 T nan
00149f48 00000064 T sprintf
00149fac 000000b8 T stpncpy
0014a064 0000022c t _strtoll_l.constprop.0
0014a290 00000004 T _strtoll_r
0014a294 000001b0 t _strtol_l.part.0
0014a444 0000003c T _strtol_r
0014a480 00000244 t _strtoull_l.constprop.0
0014a6c4 00000004 T _strtoull_r
0014a6c8 00000188 T __ssprint_r
0014a850 000000e0 T _sungetc_r
0014a930 0000006c T __ssrefill_r
0014a99c 000000c8 T _sfread_r
0014aa64 0000064c t get_arg
0014b0b0 00003808 T _svfprintf_r
0014e8b8 000000a8 T __submore
0014e960 00000190 T _wcsnrtombs_l
0014eaf0 0000004c T _wcsnrtombs_r
0014eb3c 000000f0 T __utf8_wctomb
0014ec2c 000001a8 t quorem
0014edd8 000012ec T _dtoa_r
001500c4 0000003c T iswspace_l
00150100 000001d4 t __jp2uc
001502d4 0000009c T _jp2uc_l
00150370 000000a8 T frexp
00150418 00000084 T category
0015049c 00000008 t null_write
001504a4 00000018 T setDefaultDevice
001504bc 000000c8 T FindDevice
00150584 00000028 T RemoveDevice
001505ac 0000009c T AddDevice
00150648 00000020 T GetDeviceOpTab
00150668 00000078 T _fstat_r
001506e0 00000014 T _getpid_r
001506f4 00000038 T _gettimeofday_r
0015072c 00000008 T _isatty_r
00150734 00000014 T _kill_r
00150748 00000084 T _lseek_r
001507cc 000000c8 T _open_r
00150894 00000080 T _read_r
00150914 00000078 T _sbrk_r
0015098c 00000080 T _write_r
00150a0c 00000024 T _exit
00150a30 000001b8 T _concatenate_path
00150be8 00000160 T chdir
00150d48 00000008 T __flockfile
00150d50 00000008 T __funlockfile
00150d58 00000018 T __libc_lock_acquire
00150d70 00000018 T __libc_lock_release
00150d88 00000018 T __libc_lock_init_recursive
00150da0 00000018 T __libc_lock_acquire_recursive
00150db8 00000018 T __libc_lock_release_recursive
00150dd0 00000018 T __libc_lock_close_recursive
00150de8 0000008c T __release_handle
00150e74 000000b4 T __alloc_handle
00150f28 0000003c T __get_handle
00150f64 000000f4 T _close_r
00151058 00000028 T __getreent
00151080 00000044 T strrchr
001510c4 T _fini
001520a4 R vshader_shbin
001521bc R vshader_shbin_end
001521bc R vshader_shbin_size
0015257c r .LC2
0015287c 00000080 r C.9.0
0015653c 00000120 r GStyleVarInfo
0015665c 00000400 r GCrc32LookupTable
00156a5c 00000014 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::mins
00156a70 00000014 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::masks
00156a84 00000014 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shiftc
00156a98 00000014 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::shifte
00156aac 00000020 r ImTextCharFromUtf8(unsigned int*, char const*, char const*)::lengths
00157e20 00000038 r CSWTCH.18
00157e58 00000005 r colorFmtSizes
00157e60 00000004 r depthFmtSizes
00157e84 00000070 r romFS_devoptab
00157f18 00000008 r morton_x.3
00157f20 00000008 r morton_y.2
00157f28 00000008 r s_sleepWakeEvents.4
00157f84 00000070 r archive_devoptab
00157ff4 00000030 r error_table
00158024 0000000c R typeinfo for __gnu_cxx::recursive_init_error
00158030 00000023 R typeinfo name for __gnu_cxx::recursive_init_error
00158054 00000014 R vtable for __gnu_cxx::recursive_init_error
00158068 0000000c R typeinfo for __cxxabiv1::__si_class_type_info
00158074 00000025 R typeinfo name for __cxxabiv1::__si_class_type_info
0015809c 0000002c R vtable for __cxxabiv1::__si_class_type_info
001580c8 00000008 R typeinfo for std::type_info
001580d0 0000000d R typeinfo name for std::type_info
00158124 0000000c R typeinfo for std::bad_alloc
00158130 0000000d R typeinfo name for std::bad_alloc
00158140 00000014 R vtable for std::bad_alloc
00158154 0000000c R typeinfo for __cxxabiv1::__class_type_info
00158160 00000022 R typeinfo name for __cxxabiv1::__class_type_info
00158184 0000002c R vtable for __cxxabiv1::__class_type_info
001581d4 00000008 R typeinfo for __cxxabiv1::__forced_unwind
001581dc 00000008 R typeinfo for __cxxabiv1::__foreign_exception
001581e4 0000000c R typeinfo for std::bad_exception
001581f0 00000008 R typeinfo for std::exception
001581f8 00000020 R typeinfo name for __cxxabiv1::__forced_unwind
00158218 00000024 R typeinfo name for __cxxabiv1::__foreign_exception
0015823c 00000012 R typeinfo name for std::bad_exception
00158250 0000000d R typeinfo name for std::exception
00158260 00000014 R vtable for std::bad_exception
00158274 0000000c R typeinfo for std::logic_error
00158280 0000000c R typeinfo for std::length_error
0015828c 00000010 R typeinfo name for std::logic_error
0015829c 00000011 R typeinfo name for std::length_error
001582b0 00000014 R vtable for std::logic_error
001582c4 00000014 R vtable for std::length_error
0015831c 00000060 R __inv_pio4
00158380 000000e0 R __sincosf_table
001584a0 00000004 R _global_impure_ptr
001584b4 00000014 r fpi.1
001584c8 00000014 r fpinan.0
001584e0 00000028 r tinytens
00158510 00000022 r basefix.0
0015855c 00000010 r blanks.1
0015856c 00000010 r zeroes.0
0015857c 00000101 R _ctype_
001586dc 00000100 R __hexdig
001587dc 0000000c R _C_numeric_locale
00158870 00000028 R __mprec_bigtens
00158898 000000c8 R __mprec_tens
00158960 0000000c r p05.0
0015896c 0000006c R __action_table
001589d8 00000100 R __chclass
00158ad8 0000006c R __state_table
00158b58 00000010 r blanks.1
00158b68 00000010 r zeroes.0
00158bdc 000000bc r a1
00158c98 000000bc r a2
00158d54 0000005b r a3
00158db0 00000070 r a6
00158e20 000000a2 r a7
00158ec4 00000040 r a8
00158f04 0000172a r b02cf
0015a630 00001a7c r d02f4
0015c0ac 000031e6 r categories
0015f294 00000070 R dotab_stdnull
0015f304 r 
0015f3d0 R __exidx_start
0015f5c8 R __exidx_end
00160000 00000004 d GImAllocatorFreeFunc
00160004 00000004 d GImAllocatorAllocFunc
00160008 00000004 d framerate
0016000c 00000008 d framerateCounter
00160014 00000004 d queueLock
00160018 00000004 d kCount
0016001c 00000004 d kDelay
00160020 00000004 d kInterval
00160024 W __stacksize__
00160028 00000004 D __cxxabiv1::__unexpected_handler
0016002c 00000004 D __cxxabiv1::__terminate_handler
00160030 00000001 D __fdlib_version
00160034 0000000c d __sfp_recursive_mutex
00160040 0000000c d __sinit_recursive_mutex
0016004c 00000004 D _impure_ptr
00160050 00000460 d impure_data
001604b0 00000408 D __malloc_av_
001608b8 00000004 D __malloc_sbrk_base
001608bc 00000004 D __malloc_trim_threshold
001608c0 0000000c d __malloc_recursive_mutex
001608cc 0000000c D __atexit_recursive_mutex
001608d8 00000002 d numempty
001608dc 0000016c D __global_locale
00160a48 00000004 d defaultDevice
00160a4c 0000008c D devoptab_list
00160ad8 00000400 d _current_working_directory
00160ed8 00000004 d __hndl_lock
00160edc 0000000c d __stderr_handle
00160ee8 0000000c d __stdin_handle
00160ef4 0000000c d __stdout_handle
00160f00 00001000 d handles
00161f08 d _GLOBAL_OFFSET_TABLE_
00161f14 d __frame_dummy_init_array_entry
00161f14 D __init_array_start
00161f14 B __preinit_array_end
00161f14 B __preinit_array_start
00161f14 D __tdata_lma
00161f14 D __tdata_lma_end
00161f2c d __do_global_dtors_aux_fini_array_entry
00161f2c D __fini_array_start
00161f2c D __init_array_end
00161f38 D __bss_start__
00161f38 b completed.1
00161f38 D __fini_array_end
00161f3c b object.0
00161f54 00000004 B s_bottom
00161f58 00000004 B s_gfxT3x
00161f5c 00000018 B s_gfxTexture
00161f74 00000004 B s_top
00161f78 00000004 b (anonymous namespace)::s_textScale
00161f7c 0000000c b (anonymous namespace)::s_fontRanges
00161f88 00000040 b (anonymous namespace)::s_projBottom
00161fc8 00000010 b (anonymous namespace)::s_boundScissor
00161fd8 00000004 b (anonymous namespace)::s_boundTexture
00161fdc 00000004 b (anonymous namespace)::s_boundVtxData
00161fe0 0000000c b (anonymous namespace)::s_fontTextures
00161fec 00000004 b (anonymous namespace)::s_projLocation
00161ff0 00000004 b (anonymous namespace)::s_vsh
00161ff4 00000004 b (anonymous namespace)::s_idxData
00161ff8 00000004 b (anonymous namespace)::s_idxSize
00161ffc 00000014 b (anonymous namespace)::s_program
00162010 00000040 b (anonymous namespace)::s_projTop
00162050 00000004 b (anonymous namespace)::s_vtxData
00162054 00000004 b (anonymous namespace)::s_vtxSize
00162058 00000004 b guard variable for imgui::ctru::newFrame()::prev
0016205c 00000004 b guard variable for imgui::ctru::newFrame()::start
00162060 00000018 b (anonymous namespace)::s_clipboard
00162078 00000001 b (anonymous namespace)::updateKeyboard(ImGuiIO&)::state
00162080 00000008 b imgui::ctru::newFrame()::prev
00162088 00000008 b imgui::ctru::newFrame()::start
00162090 00000004 B GImGui
00162094 00000060 b resize_grip_def
001620f4 00000070 b resize_border_def
00162164 00000004 b GImAllocatorUserData
00162168 00000001 B ImGuiTextBuffer::EmptyString
0016216c 000000d8 b FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA
00162248 000002d0 B __C3D_Context
00162518 0000000c b hookCookie
00162528 00000010 b cpuTime
00162538 00000004 b firstTarget
0016253c 00000008 b frameCounter
00162544 00000004 b frameEndCb
00162548 00000004 b frameEndCbData
00162550 00000010 b gpuTime
00162560 00000001 b inFrame
00162561 00000001 b inSafeTransfer
00162562 00000001 b isTopStereo
00162564 00000004 b lastTarget
00162568 0000000c b linkedTarget
00162574 00000001 b measureGpuTime
00162575 00000001 b needSwapBot
00162576 00000001 b needSwapTop
00162578 00000004 B C3D_BoolUnifs
0016257c 00000002 B C3D_BoolUnifsDirty
00162580 00000c00 B C3D_FVUnif
00163180 000000c0 B C3D_FVUnifDirty
00163240 00000020 B C3D_IVUnif
00163260 00000008 B C3D_IVUnifDirty
00163268 000000c0 b C3Di_FVUnifEverDirty
00163328 00000008 b C3Di_IVUnifEverDirty
00163330 00000018 b C3Di_ShaderFVecData
00163348 0000000c b sAddrMap
00163354 00000008 b sVramPool
0016335c 00000008 b sLinearPool
00163364 0000000c b sAddrMap
00163370 00000004 V __romfs_path
00163374 00000004 b romfs_mount_list
00163378 00000001 V __ctru_speedup
0016337c 00000004 B g_sharedFont
00163380 00000004 b sharedFontAddr
00163384 00000004 b gfxBottomFramebufferMaxSize
00163388 00000008 b gfxBottomFramebuffers
00163390 00000002 b gfxCurBuf
00163394 00000002 b gfxFramebufferFormats
00163398 00000002 b gfxIsDoubleBuf
0016339a 00000001 b gfxIsVram
0016339c 00000004 b gfxTopFramebufferMaxSize
001633a0 00000008 b gfxTopFramebuffers
001633a8 00000001 b gfxTopMode
001633ac 00000004 b screenAlloc
001633b0 00000004 b screenFree
001633b4 00000004 b boundQueue
001633b8 00000004 b curQueue
001633bc 00000001 b isActive
001633bd 00000001 b isRunning
001633be 00000001 b shouldStop
001633c0 00000004 B gpuCmdBuf
001633c4 00000004 B gpuCmdBufOffset
001633c8 00000004 B gpuCmdBufSize
001633cc 00000004 b gspEvent
001633d0 0000001c b gspEventCb
001633ec 0000001c b gspEventCbData
00163408 00000007 b gspEventCbOneShot
00163410 00000004 b gspEventThread
00163414 00000038 b gspEvents
0016344c 00000004 b gspGpuHandle
00163450 00000001 b gspGpuRight
00163454 00000004 b gspLastEvent
00163458 00000004 b gspRefCount
0016345c 00000001 b gspRunEvents
00163460 00000004 b gspSharedMem
00163464 00000004 b gspSharedMemHandle
00163468 00000001 b gspThreadId
0016346c 00000004 b acHandle
00163470 00000004 b acRefCount
00163474 00000001 b aptChainloadFlags
00163475 00000001 b aptChainloadMediatype
00163478 00000008 b aptChainloadTid
00163480 00000004 b aptEventHandlerThread
00163484 00000001 b aptEventHandlerThreadQuit
00163488 00000008 b aptEvents
00163490 0000000c b aptFirstHook
0016349c 00000004 b aptFlags
001634a0 00000001 b aptHomeButtonState
001634a4 00000004 b aptLockHandle
001634a8 00000004 b aptMessageFunc
001634ac 00000004 b aptMessageFuncData
001634b0 00001000 b aptParameters
001644b0 00000008 b aptReceiveEvent
001644b8 00000004 b aptRefCount
001644bc 00000008 b aptSleepEvent
001644c4 00000001 b flagInit.1
001644c5 00000001 b flagValue.0
001644c8 00000004 b serviceName.6
001644cc 00000006 b aVec
001644d4 00000004 b cPos
001644d8 00000006 b gRate
001644e0 00000014 B hidEvents
001644f4 00000004 B hidHandle
001644f8 00000004 B hidMemHandle
001644fc 00000004 b hidRefCount
00164500 00000004 B hidSharedMem
00164504 00000004 b kDown
00164508 00000004 b kHeld
0016450c 00000004 b kOld
00164510 00000004 b kRepeat
00164514 00000004 b kUp
00164518 00000004 b tPos
0016451c 00000001 b usingIrrst
00164520 00000004 b ptmSysmHandle
00164524 00000004 b ptmSysmRefCount
00164528 00000080 b fsExemptArchives
001645a8 00000004 b fsuHandle
001645ac 00000004 b fsuRefCount
001645b0 00000004 b swkbdSharedMem
001645b4 00000004 b swkbdSharedMemHandle
001645b8 00000004 B __ctru_heap
001645bc 00000004 V __ctru_heap_size
001645c0 00000004 B __ctru_linear_heap
001645c4 00000004 V __ctru_linear_heap_size
001645c8 00000004 B __system_retAddr
001645cc 00000004 B __system_argc
001645d0 00000004 B __system_argv
001645d4 b saved_stack
001645dc 00000004 b arbiter
001645e0 00000004 b srvHandle
001645e4 00000004 b srvRefCount
001645e8 00000004 b currentAddr
001645ec 00000004 b maxAddr
001645f0 00000004 b minAddr
001645f4 00000004 b csPos
001645f8 00000004 B irrstEvent
001645fc 00000004 B irrstHandle
00164600 00000004 B irrstMemHandle
00164604 00000004 b irrstRefCount
00164608 00000004 B irrstSharedMem
0016460c 00000004 b kHeld
00164610 00000004 b srvPmHandle
00164614 00000004 b archive_device_cwd
00164618 00000540 b archive_devices
00164b58 00000001 b archive_initialized
00164b5c 00000010 b (anonymous namespace)::emergency_pool
00164b6c 0000000c b eh_globals
00164b78 00000004 b (anonymous namespace)::__new_handler
00164b7c 00000010 V std::string::_Rep::_S_empty_rep_storage
00164b8c 00000028 B __malloc_current_mallinfo
00164bb4 00000004 B __malloc_max_sbrked_mem
00164bb8 00000004 B __malloc_max_total_mem
00164bbc 00000004 B __malloc_top_pad
00164bc0 00000004 b heap_start.0
00164bc4 00000004 B fake_heap_end
00164bc8 00000004 B fake_heap_start
00164bcc 00000400 b temp_cwd
00164fcc 00000048 B __syscalls
00165014 B __tls_start
00165c1c B __bss_end__
00165c1c A __end__
00165c1c B __tls_end
